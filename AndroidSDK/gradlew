#!/usr/bin/env sh

# -----------------------------------------------------------------------------
# Gradle start-up script for UNIX-like systems
# -----------------------------------------------------------------------------

# Resolve symbolic links to get the real script path
PRG="$0"
while [ -h "$PRG" ]; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG="$(dirname "$PRG")/$link"
    fi
done

SAVED="$(pwd)"
cd "$(dirname "$PRG")" >/dev/null
APP_HOME="$(pwd -P)"
cd "$SAVED" >/dev/null

APP_NAME="Gradle"
APP_BASE_NAME=$(basename "$0")
DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
MAX_FD="maximum"

warn() {
    echo "$*"
}

die() {
    echo
    echo "$*"
    echo
    exit 1
}

# Detect operating system
cygwin=false
msys=false
darwin=false
nonstop=false

case "$(uname)" in
    CYGWIN*)  cygwin=true ;;
    Darwin*)  darwin=true ;;
    MINGW*)   msys=true ;;
    NONSTOP*) nonstop=true ;;
esac

CLASSPATH="$APP_HOME/gradle/wrapper/gradle-wrapper.jar"

# Determine Java executable
if [ -n "$JAVA_HOME" ]; then
    if [ -x "$JAVA_HOME/jre/sh/java" ]; then
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi

    [ -x "$JAVACMD" ] || die "ERROR: JAVA_HOME is invalid: $JAVA_HOME"
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME not set and 'java' not found in PATH."
fi

# Adjust file descriptor limits if applicable
if ! $cygwin && ! $darwin && ! $nonstop; then
    MAX_FD_LIMIT=$(ulimit -H -n)
    if [ $? -eq 0 ]; then
        [ "$MAX_FD" = "maximum" ] && MAX_FD="$MAX_FD_LIMIT"
        ulimit -n $MAX_FD || warn "Could not set max file descriptor: $MAX_FD"
    else
        warn "Could not query max file descriptor limit"
    fi
fi

# Add macOS dock options
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# Convert paths for Windows environments (Cygwin/MSYS)
if $cygwin || $msys; then
    APP_HOME=$(cygpath --path --mixed "$APP_HOME")
    CLASSPATH=$(cygpath --path --mixed "$CLASSPATH")
    JAVACMD=$(cygpath --unix "$JAVACMD")

    ROOTDIRSRAW=$(find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null)
    ROOTDIRS=""
    SEP=""
    for dir in $ROOTDIRSRAW; do
        ROOTDIRS="${ROOTDIRS}${SEP}${dir}"
        SEP="|"
    done

    OURCYGPATTERN="(^($ROOTDIRS))"
    [ -n "$GRADLE_CYGPATTERN" ] && OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"

    i=0
    for arg in "$@"; do
        CHECK=$(echo "$arg" | grep -Ec "$OURCYGPATTERN")
        CHECK2=$(echo "$arg" | grep -Ec "^-" )

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ]; then
            eval args$i=$(cygpath --path --ignore --mixed "$arg")
        else
            eval args$i="\"$arg\""
        fi
        i=$((i+1))
    done

    eval set -- $(for j in $(seq 0 $((i-1))); do eval echo \${args$j}; done)
fi

# Escape arguments for JVM execution
save() {
    for i; do
        printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/"
    done
    echo " "
}
APP_ARGS=$(save "$@")

# Build the full Java command
eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \
    "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" \
    -classpath "\"$CLASSPATH\"" \
    org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"

exec "$JAVACMD" "$@"

